Why frontend frameworks?

Reconcilers and intro to react ...DSA bit class

this is the first part of lecture 4.2


function addTodo(){
       const title=document.getElementById("title").value;
       const description=document.getElementById("desc").value;
       //document.getElementById("container").innerHTML="adsddasdsd"
       //this causes the div to be overwritten again and again but we wantt to append it mann


       //an ugly way to this is 
       //const originalHtml=document.getElementById("container").innerHTML;
       //document.getElementById("container").innerHTML=originalHtml+
       `
       <div>${title}</div>
        <div>${description}</div>
        <button>Mark as done </button>`
    //this works but we can make use of doxument.appendchild and document.createelement syntax

    //document.createElement 
    const childdiv=document.createElement("div");
    outerdiv.innerHTML=title;
    document.getElementById("container").appendChild(childdiv);

    //<div>
    //  <div> title</div>
    //  <div> description</div>
    //  <button>Mark as done</button>
    //
    //</div>
    }


adding todo from updatedomacctostate function resulted in clearing of the dom and
which makes it ugly 
..to make the Better solution
dont clear the dom upfront and update it based on what has changed


can be done on changing ids 

Donâ€™t clear the DOM upfront, update it based on what has changed.
Question is, how does it calculate what all has changed? 
Has a todo been marked as complete? 
Has a todo been removed from the backend?

solution:
By remembering the old todos in a variable (Virtual DOM)

React does this ..never clears the DOM whole 
it calculates the diff and tells the DOM ..not to clear whole screen and just the
addition.

